{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n\n  // useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const ctx = canvas.getContext('2d');\n  //     const radius = canvas.height / 4;\n  //     const startAngle = 0;\n  //     const endAngle = Math.PI * 2;\n  //     const lineWidth = 2;\n  //     const color = 'white';\n  //     const lineHeight = 50;\n\n  //     let currentAngle = startAngle;\n  //     let currentHeight = 0;\n  //     let requestIdLine = null;\n  //     let requestIdCircle = null;\n  //     const drawFrame = () => {\n  //         ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //         ctx.beginPath();\n  //         ctx.arc(canvas.width / 2, canvas.height / 2, radius, startAngle, currentAngle);\n  //         ctx.lineWidth = lineWidth;\n  //         ctx.strokeStyle = color;\n  //         ctx.stroke();\n\n  //         currentAngle += 0.1;\n  //         if (currentAngle > endAngle) {\n  //             cancelAnimationFrame(requestIdCircle);\n  //             requestIdCircle = null; \n  //             return;\n  //         }\n\n  //         requestIdCircle = requestAnimationFrame(drawFrame);\n  //     };\n\n  //     const drawLine = () => {\n  //         ctx.beginPath();\n  //         ctx.moveTo(canvas.width / 2, canvas.height + radius);\n  //         ctx.lineTo(canvas.width / 2, canvas.height - currentHeight);\n  //         ctx.lineWidth = lineWidth;\n  //         ctx.strokeStyle = color;\n  //         ctx.stroke();\n  //         currentHeight += 2;\n  //         if (currentHeight > lineHeight) {\n  //             cancelAnimationFrame(requestIdLine);\n  //             requestIdLine = null; \n  //             return;\n  //         }\n  //         requestIdLine = requestAnimationFrame(drawLine);\n  //     }\n\n  //     drawFrame();\n  //     drawLine();\n  // }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const radius = canvas.height / 4;\n    const lineWidth = 2;\n    const color = 'white';\n    const lineHeight = 100; // Adjusted to desired line length\n\n    let currentAngle = 0;\n    let currentHeight = 0;\n    let requestIdCircle = null;\n    let requestIdLine = null;\n    const drawCircle = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n      ctx.beginPath();\n      ctx.arc(canvas.width / 2, canvas.height / 2, radius, 0, currentAngle);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.stroke();\n      currentAngle += 0.1;\n      if (currentAngle > Math.PI * 2) {\n        cancelAnimationFrame(requestIdCircle);\n        requestIdCircle = null;\n        drawLine(); // Start drawing the line after circle animation\n      } else {\n        requestIdCircle = requestAnimationFrame(drawCircle);\n      }\n    };\n    const drawLine = () => {\n      ctx.beginPath();\n      ctx.moveTo(canvas.width / 2, canvas.height + radius); // Start at circle's bottom\n      ctx.lineTo(canvas.width / 2, canvas.height - currentHeight); // Adjust for radius\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.stroke();\n      currentHeight += 2;\n      if (currentHeight > lineHeight) {\n        cancelAnimationFrame(requestIdLine);\n        requestIdLine = null;\n      } else {\n        requestIdLine = requestAnimationFrame(drawLine);\n      }\n    };\n    drawCircle(); // Start with the circle animation\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 100,\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","canvas","current","ctx","getContext","radius","height","lineWidth","color","lineHeight","currentAngle","currentHeight","requestIdCircle","requestIdLine","drawCircle","clearRect","width","beginPath","arc","strokeStyle","stroke","Math","PI","cancelAnimationFrame","drawLine","requestAnimationFrame","moveTo","lineTo","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n\n    // useEffect(() => {\n    //     const canvas = canvasRef.current;\n    //     const ctx = canvas.getContext('2d');\n    //     const radius = canvas.height / 4;\n    //     const startAngle = 0;\n    //     const endAngle = Math.PI * 2;\n    //     const lineWidth = 2;\n    //     const color = 'white';\n    //     const lineHeight = 50;\n\n    //     let currentAngle = startAngle;\n    //     let currentHeight = 0;\n    //     let requestIdLine = null;\n    //     let requestIdCircle = null;\n    //     const drawFrame = () => {\n    //         ctx.clearRect(0, 0, canvas.width, canvas.height);\n    //         ctx.beginPath();\n    //         ctx.arc(canvas.width / 2, canvas.height / 2, radius, startAngle, currentAngle);\n    //         ctx.lineWidth = lineWidth;\n    //         ctx.strokeStyle = color;\n    //         ctx.stroke();\n\n    //         currentAngle += 0.1;\n    //         if (currentAngle > endAngle) {\n    //             cancelAnimationFrame(requestIdCircle);\n    //             requestIdCircle = null; \n    //             return;\n    //         }\n\n    //         requestIdCircle = requestAnimationFrame(drawFrame);\n    //     };\n\n    //     const drawLine = () => {\n    //         ctx.beginPath();\n    //         ctx.moveTo(canvas.width / 2, canvas.height + radius);\n    //         ctx.lineTo(canvas.width / 2, canvas.height - currentHeight);\n    //         ctx.lineWidth = lineWidth;\n    //         ctx.strokeStyle = color;\n    //         ctx.stroke();\n    //         currentHeight += 2;\n    //         if (currentHeight > lineHeight) {\n    //             cancelAnimationFrame(requestIdLine);\n    //             requestIdLine = null; \n    //             return;\n    //         }\n    //         requestIdLine = requestAnimationFrame(drawLine);\n    //     }\n\n    //     drawFrame();\n    //     drawLine();\n    // }, []);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const radius = canvas.height / 4;\n        const lineWidth = 2;\n        const color = 'white';\n        const lineHeight = 100; // Adjusted to desired line length\n    \n        let currentAngle = 0;\n        let currentHeight = 0;\n        let requestIdCircle = null;\n        let requestIdLine = null;\n    \n        const drawCircle = () => {\n          ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n          ctx.beginPath();\n          ctx.arc(canvas.width / 2, canvas.height / 2, radius, 0, currentAngle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.stroke();\n    \n          currentAngle += 0.1;\n          if (currentAngle > Math.PI * 2) {\n            cancelAnimationFrame(requestIdCircle);\n            requestIdCircle = null;\n            drawLine(); // Start drawing the line after circle animation\n          } else {\n            requestIdCircle = requestAnimationFrame(drawCircle);\n          }\n        };\n    \n        const drawLine = () => {\n          ctx.beginPath();\n          ctx.moveTo(canvas.width / 2, canvas.height+ radius ); // Start at circle's bottom\n          ctx.lineTo(canvas.width / 2, canvas.height - currentHeight); // Adjust for radius\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.stroke();\n    \n          currentHeight += 2;\n          if (currentHeight > lineHeight) {\n            cancelAnimationFrame(requestIdLine);\n            requestIdLine = null;\n          } else {\n            requestIdLine = requestAnimationFrame(drawLine);\n          }\n        };\n    \n        drawCircle(); // Start with the circle animation\n      }, []);\n\n    return (\n        <div className='viewContainer'>\n            <div className='headerContainer' >\n                <canvas ref={canvasRef} width={100} height={100} />;\n                <h2 className='header'>Hangman</h2>\n\n            </div>\n            <h2 className='header'>Hangman</h2>\n            <h2 className='header'>Hangman</h2>\n            <h2 className='header'>Hangman</h2>\n            <h2 className='header'>Hangman</h2>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}