{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/WebGames/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Hangman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n  const [word, setWord] = useState(\"HANGMAN\");\n  const [selectedLetters, setSelectedLetters] = useState([]);\n  const [inCorrectAttempts, setIncorrectAttempts] = useState(0);\n  const [hint, setHint] = useState(\"\");\n  const [guess, setGuess] = useState([]);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  const attempts = 6;\n  const hangmanParts = [{\n    'attempt': 1,\n    'draw': () => drawCircle()\n  }, {\n    'attempt': 2,\n    'draw': () => drawBody()\n  }, {\n    'attempt': 3,\n    'draw': () => drawLeftArm()\n  }, {\n    'attempt': 4,\n    'draw': () => drawRightArm()\n  }, {\n    'attempt': 5,\n    'draw': () => drawLeftLeg()\n  }, {\n    'attempt': 6,\n    'draw': () => drawRightLeg()\n  }];\n  const headRadiusRatio = 0.12;\n  const torsoHeightRatio = 0.15;\n  const legLengthRatio = 0.6;\n  const poleWidthRatio = 0.2;\n  const poleHeightRatio = 1;\n  const poleTopOffsetRatio = 0.4;\n  useEffect(() => {\n    getWord();\n    drawPole();\n  }, []);\n  const getWord = () => {\n    fetch(\"https://www.wordgamedb.com/api/v1/words/random\").then(response => response.json()).then(data => {\n      console.log(\"word\", data);\n      setWord(data.word.toUpperCase());\n      setHint(data.hint);\n      setGuess(Array(data.word.length).fill(\"\"));\n    });\n  };\n  const restart = () => {\n    getWord();\n    drawPole();\n    setSelectedLetters([]);\n    setIncorrectAttempts(0);\n    setGuess([]);\n    setIsGameOver(false);\n  };\n  const drawCircle = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const radius = canvas.height * headRadiusRatio;\n    const bodyYStart = canvas.height / 2 + radius / 2;\n    let currentAngle = 0;\n    let requestIdCircle = null;\n    const animateCircle = () => {\n      ctx.beginPath();\n      ctx.arc(canvas.width / 2.3, bodyYStart - radius, radius, 0, currentAngle);\n      ctx.lineWidth = 10;\n      ctx.strokeStyle = 'wheat';\n      ctx.stroke();\n      ctx.fillStyle = 'wheat';\n      ctx.fill();\n      ctx.font = 'bold 14px Arial';\n      ctx.fillStyle = 'black';\n      ctx.fillText('O', canvas.width / 2.3 - radius * 0.3, bodyYStart - radius * 1.2);\n      ctx.fillText('O', canvas.width / 2.3, bodyYStart - radius * 1.2);\n      currentAngle += 0.1;\n      if (currentAngle > Math.PI * 2 + 2) {\n        cancelAnimationFrame(requestIdCircle);\n      } else {\n        requestIdCircle = requestAnimationFrame(animateCircle);\n      }\n    };\n    requestIdCircle = requestAnimationFrame(animateCircle);\n  };\n  const drawBodyPart = (ctx, x1, y1, x2, y2, height) => {\n    let currentHeight = 0;\n    let requestId = null;\n    const drawPart = () => {\n      ctx.beginPath();\n      ctx.lineWidth = 60;\n      ctx.strokeStyle = 'aqua';\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2 + currentHeight);\n      ctx.stroke();\n      currentHeight += 1;\n      if (currentHeight > height) {\n        cancelAnimationFrame(requestId);\n      } else {\n        requestId = requestAnimationFrame(drawPart);\n      }\n    };\n    requestId = requestAnimationFrame(drawPart);\n  };\n  const drawLimbs = (ctx, x1, y1, x2, y2, side) => {\n    let currentHeight = 0;\n    let currentWidth = 0;\n    let requestId = null;\n    const drawPart = () => {\n      ctx.beginPath();\n      ctx.lineWidth = 20;\n      ctx.strokeStyle = 'wheat';\n      ctx.moveTo(x1, y1);\n      if (side == 'left') {\n        ctx.lineTo(x1 - currentHeight, y1);\n        ctx.stroke();\n        currentHeight += 1;\n        if (x1 - currentHeight < x2) {\n          ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else if (side == 'right') {\n        ctx.lineTo(x1 + currentHeight, y1);\n        ctx.stroke();\n        currentHeight += 1;\n        if (x1 + currentHeight > x2) {\n          ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else if (side == 'leftLeg') {\n        ctx.strokeStyle = 'yellow';\n        ctx.lineTo(x1, y1 + currentHeight);\n        ctx.stroke();\n        currentHeight += 1;\n        if (y1 + currentHeight > y2) {\n          console.log(\"Left leg\", x2, y2);\n          ctx.arc(x2 - 30, y2 + 24, 12, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else {\n        ctx.strokeStyle = 'yellow';\n        ctx.lineTo(x1, y1 + currentHeight);\n        ctx.stroke();\n        currentHeight += 1;\n        if (y1 + currentHeight > y2 + 10) {\n          console.log(\"Right leg\", x2, y2);\n          ctx.arc(x2 + 9, y2 + 20, 12, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      }\n    };\n    requestId = requestAnimationFrame(drawPart);\n  };\n  const drawBody = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * 0.5 * headRadiusRatio;\n    drawBodyPart(ctx, canvas.width / 2.3, bodyYStart, canvas.width / 2.3, bodyYStart + canvas.height / 2 * torsoHeightRatio, 80);\n  };\n  const drawLeftArm = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n    drawLimbs(ctx, canvas.width / 2.8, armY, canvas.height / 3 - canvas.width / 3, armY, 'left');\n  };\n  const drawRightArm = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n    drawLimbs(ctx, canvas.width / 1.97, armY, canvas.height / 4 + canvas.width / 3, armY, 'right');\n  };\n  const drawLeftLeg = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const legLength = canvas.height / 8 * legLengthRatio;\n    drawLimbs(ctx, canvas.width / 2.6, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'leftLeg');\n  };\n  const drawRightLeg = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const legLength = canvas.height / 7.8 * legLengthRatio;\n    console.log(\"Leg\", canvas.width / 2.6, bodyYStart + canvas.height / 2 * torsoHeightRatio, legLength);\n    drawLimbs(ctx, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'rightLeg');\n  };\n  const drawPole = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const radius = canvas.height / 8;\n    const poleWidth = canvas.width * 3 * poleWidthRatio;\n    const poleHeight = canvas.height * poleHeightRatio;\n    const poleTopY = canvas.height * poleTopOffsetRatio;\n    ctx.lineWidth = 10;\n    ctx.strokeStyle = \"Sienna\";\n    // drawBodyPart(ctx, canvas.width / 2 - 3*radius, canvas.height / 4 - 3* radius, canvas.width / 2 - 3*radius, canvas.height / 2 + 3*radius, 100);\n    ctx.beginPath();\n    console.log(\"pole\", canvas.width / 3 - poleWidth / 2, poleTopY * 0.3, canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n    ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n    ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleHeight - poleTopY * 1.8);\n    ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.7);\n    ctx.font = 'bold 100px Arial';\n    ctx.fillStyle = 'Chocolate';\n    ctx.fillText('O', canvas.width / 6 + poleWidth / 3.7, poleTopY * 0.99);\n    ctx.moveTo(canvas.width / 3 + poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n    ctx.stroke();\n  };\n  const handleAlphaClick = item => {\n    if (!selectedLetters.includes(item) && inCorrectAttempts < attempts) {\n      setSelectedLetters([...selectedLetters, item]);\n      if (!word.includes(item)) {\n        const icattempts = inCorrectAttempts + 1;\n        setIncorrectAttempts(icattempts);\n        hangmanParts.find(part => part.attempt === icattempts).draw();\n        if (icattempts == attempts) {\n          setIsGameOver(true);\n        }\n      } else {\n        const tempGuess = guess;\n        console.log(tempGuess);\n        word.split('').map((letter, index) => letter == item ? tempGuess[index] = letter : null);\n        setGuess(tempGuess);\n        if (!tempGuess.includes(\"\")) {\n          setIsGameOver(true);\n        }\n      }\n    }\n  };\n  const renderAlphabets = (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alphabet\",\n    onClick: () => handleAlphaClick(item),\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: selectedLetters.includes(item) ? word.includes(item) ? 'red' : 'grey' : 'black',\n        textDecoration: selectedLetters.includes(item) && !word.includes(item) ? 'line-through' : 'none'\n      },\n      children: [\" \", item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 46\n  }, this);\n  const renderWord = (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `underline ${!selectedLetters.includes(item) && 'noItem'}`,\n      children: [\" \", selectedLetters.includes(item) ? item : '  ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 41\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: isGameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"game-over-animation\",\n            children: \"GAME OVER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alphabet-container\",\n            children: alphabets.map((item, index) => renderAlphabets(item, index))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            padding: '50px'\n          },\n          children: guess.map((item, index) => renderWord(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hintContainer\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLightbulb,\n            width: 30,\n            height: 30,\n            color: \"wheat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'wheat',\n              fontSize: '26px',\n              marginInline: '5px'\n            },\n            children: \"HINT:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'wheat',\n              fontSize: '16px',\n              marginInline: '26px'\n            },\n            children: hint.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"XOButton restart\",\n          onClick: () => restartGame(),\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"PDx1dZqTuFvU33EozPmOx2Xv+Y8=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","faLightbulb","FontAwesomeIcon","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","word","setWord","selectedLetters","setSelectedLetters","inCorrectAttempts","setIncorrectAttempts","hint","setHint","guess","setGuess","isGameOver","setIsGameOver","alphabets","attempts","hangmanParts","draw","drawCircle","drawBody","drawLeftArm","drawRightArm","drawLeftLeg","drawRightLeg","headRadiusRatio","torsoHeightRatio","legLengthRatio","poleWidthRatio","poleHeightRatio","poleTopOffsetRatio","getWord","drawPole","fetch","then","response","json","data","console","log","toUpperCase","Array","length","fill","restart","canvas","current","ctx","getContext","radius","height","bodyYStart","currentAngle","requestIdCircle","animateCircle","beginPath","arc","width","lineWidth","strokeStyle","stroke","fillStyle","font","fillText","Math","PI","cancelAnimationFrame","requestAnimationFrame","drawBodyPart","x1","y1","x2","y2","currentHeight","requestId","drawPart","moveTo","lineTo","drawLimbs","side","currentWidth","armY","legLength","clearRect","poleWidth","poleHeight","poleTopY","handleAlphaClick","item","includes","icattempts","find","part","attempt","tempGuess","split","map","letter","index","renderAlphabets","className","onClick","children","style","color","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","renderWord","display","flexDirection","justifyContent","ref","padding","icon","fontSize","marginInline","restartGame","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/WebGames/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { faLightbulb } from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './Hangman.css';\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n    const [word, setWord] = useState(\"HANGMAN\");\n    const [selectedLetters, setSelectedLetters] = useState([]);\n    const [inCorrectAttempts, setIncorrectAttempts] = useState(0);\n    const [hint, setHint] = useState(\"\");\n    const [guess, setGuess] = useState([]);\n    const [isGameOver, setIsGameOver] = useState(false);\n    const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    const attempts = 6;\n    const hangmanParts = [{\n        'attempt': 1,\n        'draw': () => drawCircle(),\n    }, {\n        'attempt': 2,\n        'draw': () => drawBody(),\n    }, {\n        'attempt': 3,\n        'draw': () => drawLeftArm()\n    }, {\n        'attempt': 4,\n        'draw': () => drawRightArm()\n    }, {\n        'attempt': 5,\n        'draw': () => drawLeftLeg()\n    }, {\n        'attempt': 6,\n        'draw': () => drawRightLeg()\n    }]\n    const headRadiusRatio = 0.12;\n    const torsoHeightRatio = 0.15;\n    const legLengthRatio = 0.6;\n    const poleWidthRatio = 0.2;\n    const poleHeightRatio = 1;\n    const poleTopOffsetRatio = 0.4;\n    useEffect(() => {\n        getWord();\n        drawPole();\n    }, [])\n\n    const getWord = () => {\n        fetch(\"https://www.wordgamedb.com/api/v1/words/random\")\n            .then(response => response.json())\n            .then(data => {\n                console.log(\"word\", data);\n                setWord(data.word.toUpperCase())\n                setHint(data.hint);\n                setGuess(Array(data.word.length).fill(\"\"));\n            })\n    }\n    const restart = () => {\n        getWord();\n        drawPole();\n        setSelectedLetters([]);\n        setIncorrectAttempts(0);\n        setGuess([]);\n        setIsGameOver(false)\n    }\n\n    const drawCircle = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const radius = canvas.height * headRadiusRatio;\n        const bodyYStart = canvas.height / 2 + radius / 2;\n        let currentAngle = 0;\n        let requestIdCircle = null;\n\n        const animateCircle = () => {\n\n            ctx.beginPath();\n            ctx.arc(canvas.width / 2.3, bodyYStart - radius, radius, 0, currentAngle);\n            ctx.lineWidth = 10;\n            ctx.strokeStyle = 'wheat';\n            ctx.stroke();\n            ctx.fillStyle = 'wheat'\n            ctx.fill();\n            ctx.font = 'bold 14px Arial';\n            ctx.fillStyle = 'black';\n            ctx.fillText('O', canvas.width / 2.3 - radius * 0.3, bodyYStart - radius * 1.2);\n            ctx.fillText('O', canvas.width / 2.3, bodyYStart - radius * 1.2);\n            currentAngle += 0.1;\n\n            if (currentAngle > Math.PI * 2 + 2) {\n                cancelAnimationFrame(requestIdCircle);\n            } else {\n                requestIdCircle = requestAnimationFrame(animateCircle);\n            }\n        };\n\n        requestIdCircle = requestAnimationFrame(animateCircle);\n    };\n\n    const drawBodyPart = (ctx, x1, y1, x2, y2, height) => {\n        let currentHeight = 0;\n        let requestId = null;\n\n        const drawPart = () => {\n            ctx.beginPath();\n            ctx.lineWidth = 60;\n            ctx.strokeStyle = 'aqua'\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2 + currentHeight);\n            ctx.stroke();\n            currentHeight += 1;\n\n            if (currentHeight > height) {\n                cancelAnimationFrame(requestId);\n            } else {\n                requestId = requestAnimationFrame(drawPart);\n            }\n        };\n\n        requestId = requestAnimationFrame(drawPart);\n    };\n\n    const drawLimbs = (ctx, x1, y1, x2, y2, side) => {\n        let currentHeight = 0;\n        let currentWidth = 0;\n        let requestId = null;\n        const drawPart = () => {\n            ctx.beginPath();\n            ctx.lineWidth = 20;\n            ctx.strokeStyle = 'wheat';\n            ctx.moveTo(x1, y1);\n            if (side == 'left') {\n                ctx.lineTo(x1 - currentHeight, y1);\n                ctx.stroke();\n                currentHeight += 1;\n                if (x1 - currentHeight < x2) {\n                    ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else if (side == 'right') {\n                ctx.lineTo(x1 + currentHeight, y1);\n                ctx.stroke();\n                currentHeight += 1;\n                if (x1 + currentHeight > x2) {\n                    ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else if (side == 'leftLeg') {\n                ctx.strokeStyle = 'yellow';\n\n                ctx.lineTo(x1, y1 + currentHeight);\n                ctx.stroke();\n                currentHeight += 1;\n                if (y1 + currentHeight > y2) {\n                    console.log(\"Left leg\", x2, y2)\n                    ctx.arc(x2 - 30, y2 + 24, 12, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else {\n                ctx.strokeStyle = 'yellow';\n\n                ctx.lineTo(x1, y1 + currentHeight);\n                ctx.stroke();\n                currentHeight += 1;\n                if (y1 + currentHeight > y2 + 10) {\n                    console.log(\"Right leg\", x2, y2)\n                    ctx.arc(x2 + 9, y2 + 20, 12, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n\n        };\n\n        requestId = requestAnimationFrame(drawPart);\n    };\n\n    const drawBody = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * 0.5 * headRadiusRatio;\n        drawBodyPart(ctx, canvas.width / 2.3, bodyYStart, canvas.width / 2.3, bodyYStart + canvas.height / 2 * torsoHeightRatio, 80);\n    }\n\n    const drawLeftArm = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n\n        drawLimbs(ctx, canvas.width / 2.8, armY, canvas.height / 3 - canvas.width / 3,\n            armY, 'left');\n    };\n\n    const drawRightArm = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n        drawLimbs(ctx, canvas.width / 1.97, armY, canvas.height / 4 + canvas.width / 3,\n            armY, 'right');\n    };\n\n    const drawLeftLeg = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const legLength = canvas.height / 8 * legLengthRatio;\n        drawLimbs(ctx, canvas.width / 2.6, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.3,\n            bodyYStart + canvas.height * torsoHeightRatio + legLength, 'leftLeg');\n    };\n\n    const drawRightLeg = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const legLength = canvas.height / 7.8 * legLengthRatio;\n        console.log(\"Leg\", canvas.width / 2.6, bodyYStart + canvas.height / 2 * torsoHeightRatio, legLength)\n\n        drawLimbs(ctx, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'rightLeg');\n    };\n\n    const drawPole = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        const radius = canvas.height / 8;\n        const poleWidth = canvas.width * 3 * poleWidthRatio;\n        const poleHeight = canvas.height * poleHeightRatio;\n        const poleTopY = canvas.height * poleTopOffsetRatio;\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"Sienna\";\n        // drawBodyPart(ctx, canvas.width / 2 - 3*radius, canvas.height / 4 - 3* radius, canvas.width / 2 - 3*radius, canvas.height / 2 + 3*radius, 100);\n        ctx.beginPath();\n        console.log(\"pole\", canvas.width / 3 - poleWidth / 2, poleTopY * 0.3, canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight)\n        ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n        ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleHeight - poleTopY * 1.8);\n        ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.7);\n        ctx.font = 'bold 100px Arial';\n        ctx.fillStyle = 'Chocolate';\n        ctx.fillText('O', canvas.width / 6 + poleWidth / 3.7, poleTopY * 0.99);\n        ctx.moveTo(canvas.width / 3 + poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n        ctx.stroke();\n    }\n\n    const handleAlphaClick = (item) => {\n        if (!selectedLetters.includes(item) && inCorrectAttempts < attempts ) {\n            setSelectedLetters([...selectedLetters, item]);\n            if (!word.includes(item)) {\n                const icattempts = inCorrectAttempts + 1;\n                setIncorrectAttempts(icattempts);\n                hangmanParts.find((part) => part.attempt === icattempts).draw();\n                if (icattempts == attempts) {\n                    setIsGameOver(true);\n                }\n\n            }\n            else{\n                const tempGuess = guess;\n                console.log(tempGuess);\n                word.split('').map((letter, index) => letter == item ? tempGuess[index] = letter: null);\n                setGuess(tempGuess);\n                if (!tempGuess.includes(\"\")) {\n                    setIsGameOver(true);\n                  }\n            }\n        }\n    }\n\n    const renderAlphabets = (item, index) => <div key={index}\n        className=\"alphabet\" onClick={() => handleAlphaClick(item)}  >\n        <p style={{\n            color: selectedLetters.includes(item) ? word.includes(item) ? 'red' : 'grey' : 'black',\n            textDecoration: selectedLetters.includes(item) && !word.includes(item) ? 'line-through' : 'none',\n        }}> {item} </p>\n    </div>\n\n    const renderWord = (item, index) => <div key={index} className=\"letter-container\">\n        <div className={`underline ${!selectedLetters.includes(item) && 'noItem' }`}> {selectedLetters.includes(item) ? item : '  '}</div>\n    </div>\n\n    return (\n        <div className=\"viewContainer\">\n            <div className='headerContainer' >\n\n                <h2 className='header'>Hangman</h2>\n            </div>\n           <div style={{ display: 'flex', flexDirection: 'row', justifyContent:'flex-start' }}>\n                <canvas ref={canvasRef} width={400} height={600}/>;\n                <div>\n                    <div>\n                    {isGameOver && <p className=\"game-over-animation\">GAME OVER</p>}\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"alphabet-container\">\n                            {alphabets.map((item, index) => renderAlphabets(item, index))}\n                        </div>\n\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'row', padding: '50px' }}>\n                        {guess.map((item, index) => renderWord(item, index))}\n                    </div>\n                    <div className=\"hintContainer\">\n                        <FontAwesomeIcon icon = {faLightbulb} width={30} height={30} color=\"wheat\"/>\n                        <p style={{ color: 'wheat', fontSize: '26px', marginInline: '5px' }}>HINT:</p>\n                        <p style={{ color: 'wheat', fontSize: '16px', marginInline: '26px' }}>{hint.toUpperCase()}</p>\n                    </div>\n                    <button className = 'XOButton restart'  onClick={() => restartGame()}>Restart</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}