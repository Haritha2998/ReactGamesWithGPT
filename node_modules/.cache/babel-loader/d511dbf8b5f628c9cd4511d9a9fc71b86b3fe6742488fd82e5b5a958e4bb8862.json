{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n\n  // useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const ctx = canvas.getContext('2d');\n  //     const radius = canvas.height / 4;\n  //     const startAngle = 0;\n  //     const endAngle = Math.PI * 2;\n  //     const lineWidth = 2;\n  //     const color = 'white';\n  //     const lineHeight = 50 - radius * 2;\n\n  //     let currentAngle = startAngle;\n  //     let currentHeight = 0;\n\n  //     const drawFrame = () => {\n  //         ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //         ctx.beginPath();\n  //         ctx.arc(canvas.width / 2, canvas.height / 2, radius, startAngle, currentAngle);\n  //         ctx.lineWidth = lineWidth;\n  //         ctx.strokeStyle = color;\n  //         ctx.stroke();\n\n  //         currentAngle += 0.1;\n  //         if (currentAngle > endAngle) {\n  //             cancelAnimationFrame(drawFrame);\n  //         }\n\n  //         requestAnimationFrame(drawFrame);\n  //     };\n\n  //     const drawLine = () => {\n  //         ctx.beginPath();\n  //         ctx.moveTo(canvas.width / 2, canvas.height + radius);\n  //         ctx.lineTo(canvas.width / 2, canvas.height - currentHeight);\n  //         ctx.lineWidth = lineWidth;\n  //         ctx.strokeStyle = color;\n  //         ctx.stroke();\n  //         currentHeight += 2;\n  //         if (currentHeight > lineHeight) cancelAnimationFrame(drawLine);\n  //         requestAnimationFrame(drawLine);\n  //     }\n\n  //     drawFrame();\n  //     drawLine();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n\n    // useEffect(() => {\n    //     const canvas = canvasRef.current;\n    //     const ctx = canvas.getContext('2d');\n    //     const radius = canvas.height / 4;\n    //     const startAngle = 0;\n    //     const endAngle = Math.PI * 2;\n    //     const lineWidth = 2;\n    //     const color = 'white';\n    //     const lineHeight = 50 - radius * 2;\n\n    //     let currentAngle = startAngle;\n    //     let currentHeight = 0;\n\n    //     const drawFrame = () => {\n    //         ctx.clearRect(0, 0, canvas.width, canvas.height);\n    //         ctx.beginPath();\n    //         ctx.arc(canvas.width / 2, canvas.height / 2, radius, startAngle, currentAngle);\n    //         ctx.lineWidth = lineWidth;\n    //         ctx.strokeStyle = color;\n    //         ctx.stroke();\n\n    //         currentAngle += 0.1;\n    //         if (currentAngle > endAngle) {\n    //             cancelAnimationFrame(drawFrame);\n    //         }\n\n    //         requestAnimationFrame(drawFrame);\n    //     };\n\n    //     const drawLine = () => {\n    //         ctx.beginPath();\n    //         ctx.moveTo(canvas.width / 2, canvas.height + radius);\n    //         ctx.lineTo(canvas.width / 2, canvas.height - currentHeight);\n    //         ctx.lineWidth = lineWidth;\n    //         ctx.strokeStyle = color;\n    //         ctx.stroke();\n    //         currentHeight += 2;\n    //         if (currentHeight > lineHeight) cancelAnimationFrame(drawLine);\n    //         requestAnimationFrame(drawLine);\n    //     }\n\n    //     drawFrame();\n    //     drawLine();\n    // }, []);\n\n    return (\n        <div className='viewContainer'>\n            <div className='headerContainer' >\n                {/* <canvas ref={canvasRef} width={200} height={200} />; */}\n                <h2 className='header'>Hangman</h2>\n            </div>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACIE,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC1BL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAE5BL,OAAA;QAAII,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACP,EAAA,CAxDuBD,OAAO;AAAAS,EAAA,GAAPT,OAAO;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}