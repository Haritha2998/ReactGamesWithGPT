{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './Hangman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n  const [word, setWord] = useState(\"HANGMAN\");\n  const [selectedLetters, setSelectedLetters] = useState([]);\n  const [inCorrectAttempts, setIncorrectAttempts] = useState(0);\n  const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  const attempts = 6;\n  const hangmanParts = [{\n    'attempt': 1,\n    'draw': () => drawCircle()\n  }, {\n    'attempt': 2,\n    'draw': () => drawBody()\n  }, {\n    'attempt': 3,\n    'draw': () => drawLeftArm()\n  }, {\n    'attempt': 4,\n    'draw': () => drawRightArm()\n  }, {\n    'attempt': 5,\n    'draw': () => drawLeftLeg()\n  }, {\n    'attempt': 6,\n    'draw': () => drawRightLeg()\n  }];\n  const lineWidth = 4;\n  const color = 'white';\n  const headRadiusRatio = 0.12;\n  const torsoHeightRatio = 0.4;\n  const armLengthRatio = 0.5;\n  const legLengthRatio = 0.4;\n  const poleWidthRatio = 0.2;\n  const poleHeightRatio = 1;\n  const poleTopOffsetRatio = 0.4;\n  useEffect(() => {\n    drawPole();\n  }, []);\n  const drawCircle = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const radius = canvas.height * headRadiusRatio;\n    const bodyYStart = canvas.height / 2 + radius / 2;\n    let currentAngle = 0;\n    let requestIdCircle = null;\n    const animateCircle = () => {\n      ctx.beginPath();\n      ctx.arc(canvas.width / 2.3, bodyYStart - radius, radius, 0, currentAngle);\n      ctx.lineWidth = 10;\n      ctx.strokeStyle = color;\n      ctx.stroke();\n      currentAngle += 0.1;\n      if (currentAngle > Math.PI * 2 + 2) {\n        cancelAnimationFrame(requestIdCircle);\n      } else {\n        requestIdCircle = requestAnimationFrame(animateCircle);\n      }\n    };\n    requestIdCircle = requestAnimationFrame(animateCircle);\n  };\n  const drawBodyPart = (ctx, x1, y1, x2, y2, height) => {\n    let currentHeight = 0;\n    let requestId = null;\n    const drawPart = () => {\n      ctx.beginPath();\n      ctx.lineWidth = lineWidth;\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2 + currentHeight);\n      ctx.stroke();\n      currentHeight += 1;\n      if (currentHeight > height) {\n        cancelAnimationFrame(requestId);\n      } else {\n        requestId = requestAnimationFrame(drawPart);\n      }\n    };\n    requestId = requestAnimationFrame(drawPart);\n  };\n  const drawLimbs = (ctx, x1, y1, x2, y2, side) => {\n    let currentHeight = 0;\n    let currentWidth = 0;\n    let requestId = null;\n    const drawPart = () => {\n      ctx.beginPath();\n      ctx.lineWidth = lineWidth;\n      ctx.moveTo(x1, y1);\n      if (side == 'left') {\n        ctx.lineTo(x1 - currentHeight, y1 - currentWidth);\n        ctx.stroke();\n        currentHeight += 1;\n        currentWidth += 1;\n        if (currentHeight < x2 && currentWidth < y2) {\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else if (side == 'right') {\n        ctx.lineTo(x1 + currentHeight, y1 - currentWidth);\n        ctx.stroke();\n        currentHeight += 1;\n        currentWidth += 1;\n        if (currentHeight > x2 && currentWidth < y2) {\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else if (side == 'leftLeg') {\n        ctx.lineTo(x1 - currentHeight, y1 + currentWidth);\n        ctx.stroke();\n        currentHeight += 1;\n        currentWidth += 1;\n        if (currentHeight < x2 && currentWidth > y2) {\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else {\n        ctx.lineTo(x1 + currentHeight, y1 + currentWidth);\n        ctx.stroke();\n        currentHeight += 1;\n        currentWidth += 1;\n        if (currentHeight > x2 && currentWidth > y2) {\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      }\n    };\n    requestId = requestAnimationFrame(drawPart);\n  };\n  const drawBody = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * 0.5 * headRadiusRatio;\n    drawBodyPart(ctx, canvas.width / 2.3, bodyYStart, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio, 80);\n  };\n  const drawLeftArm = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const armLength = canvas.height * 0.5;\n    drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * headRadiusRatio / 2, canvas.width / 2.3 - armLength, canvas.height, 'left');\n  };\n  const drawRightArm = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const armLength = canvas.height * armLengthRatio;\n    drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * headRadiusRatio / 2, canvas.width / 2.3 + armLength, bodyYStart - canvas.height * headRadiusRatio / 2, 'right');\n  };\n  const drawLeftLeg = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const legLength = canvas.height * legLengthRatio;\n    drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio / 2, canvas.width / 2.3 - legLength, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'leftLeg');\n  };\n  const drawRightLeg = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const radius = canvas.height / 8;\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const legLength = canvas.height * legLengthRatio;\n    drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio / 2, canvas.width / 2.3 + legLength, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'rightLeg');\n  };\n  const drawPole = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const radius = canvas.height / 8;\n    const poleWidth = canvas.width * 3 * poleWidthRatio;\n    const poleHeight = canvas.height * poleHeightRatio;\n    const poleTopY = canvas.height * poleTopOffsetRatio;\n    ctx.lineWidth = 4;\n    ctx.strokeStyle = color;\n    // drawBodyPart(ctx, canvas.width / 2 - 3*radius, canvas.height / 4 - 3* radius, canvas.width / 2 - 3*radius, canvas.height / 2 + 3*radius, 100);\n    ctx.beginPath();\n    ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n    ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleHeight - poleTopY * 1.8);\n    ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.8);\n    ctx.font = 'bold 62px Arial';\n    ctx.fillStyle = 'white';\n    ctx.fillText('O', canvas.width / 7 + poleWidth / 3, poleTopY * 1.15);\n    ctx.moveTo(canvas.width / 3 + poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n    ctx.stroke();\n  };\n  const renderAlphabets = (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alphabet\",\n    onClick: () => {\n      if (!selectedLetters.includes(item) && selectedLetters.length <= attempts) {\n        setSelectedLetters([...selectedLetters, item]);\n        if (!word.includes(item)) {\n          const icattempts = inCorrectAttempts;\n          setIncorrectAttempts(icattempts + 1);\n          hangmanParts.find(part => part.attempt === icattempts + 1).draw();\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: selectedLetters.includes(item) ? word.includes(item) ? 'red' : 'grey' : 'black',\n        textDecoration: selectedLetters.includes(item) && !word.includes(item) ? 'line-through' : 'none'\n      },\n      children: [\" \", item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 46\n  }, this);\n  const renderWord = (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"underline\",\n      children: [\" \", selectedLetters.includes(item) ? item : '  ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 41\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alphabet-container\",\n            children: alphabets.map((item, index) => renderAlphabets(item, index))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            padding: '50px'\n          },\n          children: word.split('').map((item, index) => renderWord(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'wheat',\n              fontSize: '16px'\n            },\n            children: \" The hint is .........\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"O0FVhbx8o0Ucx4pQ7xA3wP2xq8k=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","word","setWord","selectedLetters","setSelectedLetters","inCorrectAttempts","setIncorrectAttempts","alphabets","attempts","hangmanParts","draw","drawCircle","drawBody","drawLeftArm","drawRightArm","drawLeftLeg","drawRightLeg","lineWidth","color","headRadiusRatio","torsoHeightRatio","armLengthRatio","legLengthRatio","poleWidthRatio","poleHeightRatio","poleTopOffsetRatio","drawPole","canvas","current","ctx","getContext","radius","height","bodyYStart","currentAngle","requestIdCircle","animateCircle","beginPath","arc","width","strokeStyle","stroke","Math","PI","cancelAnimationFrame","requestAnimationFrame","drawBodyPart","x1","y1","x2","y2","currentHeight","requestId","drawPart","moveTo","lineTo","drawLimbs","side","currentWidth","armLength","legLength","clearRect","poleWidth","poleHeight","poleTopY","font","fillStyle","fillText","renderAlphabets","item","index","className","onClick","includes","length","icattempts","find","part","attempt","children","style","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","renderWord","display","flexDirection","ref","map","padding","split","fontSize","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport './Hangman.css';\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n    const [word, setWord] = useState(\"HANGMAN\");\n    const [selectedLetters, setSelectedLetters] = useState([]);\n    const [inCorrectAttempts, setIncorrectAttempts] = useState(0);\n    const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    const attempts = 6;\n    const hangmanParts = [{\n        'attempt': 1,\n        'draw': () => drawCircle(),\n    }, {\n        'attempt': 2,\n        'draw': () => drawBody(),\n    }, {\n        'attempt': 3,\n        'draw': () => drawLeftArm()\n    }, {\n        'attempt': 4,\n        'draw': () => drawRightArm()\n    }, {\n        'attempt': 5,\n        'draw': () => drawLeftLeg()\n    }, {\n        'attempt': 6,\n        'draw': () => drawRightLeg()\n    }]\n    const lineWidth = 4;\n    const color = 'white';\n    const headRadiusRatio = 0.12;\n    const torsoHeightRatio = 0.4;\n    const armLengthRatio = 0.5;\n    const legLengthRatio = 0.4;\n    const poleWidthRatio = 0.2;\n    const poleHeightRatio = 1;\n    const poleTopOffsetRatio = 0.4;\n    useEffect(() => {\n        drawPole();\n    }, [])\n\n    const drawCircle = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const radius = canvas.height * headRadiusRatio;\n        const bodyYStart = canvas.height / 2 + radius/2;\n        let currentAngle = 0;\n        let requestIdCircle = null;\n\n        const animateCircle = () => {\n\n            ctx.beginPath();\n            ctx.arc(canvas.width / 2.3, bodyYStart - radius, radius, 0, currentAngle);\n            ctx.lineWidth = 10;\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n            currentAngle += 0.1;\n\n            if (currentAngle > Math.PI * 2 + 2) {\n                cancelAnimationFrame(requestIdCircle);\n            } else {\n                requestIdCircle = requestAnimationFrame(animateCircle);\n            }\n        };\n\n        requestIdCircle = requestAnimationFrame(animateCircle);\n    };\n\n    const drawBodyPart = (ctx, x1, y1, x2, y2, height) => {\n        let currentHeight = 0;\n        let requestId = null;\n\n        const drawPart = () => {\n            ctx.beginPath();\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2 + currentHeight);\n            ctx.stroke();\n            currentHeight += 1;\n\n            if (currentHeight > height) {\n                cancelAnimationFrame(requestId);\n            } else {\n                requestId = requestAnimationFrame(drawPart);\n            }\n        };\n\n        requestId = requestAnimationFrame(drawPart);\n    };\n\n    const drawLimbs = (ctx, x1, y1, x2, y2, side) => {\n        let currentHeight = 0;\n        let currentWidth = 0;\n        let requestId = null;\n        const drawPart = () => {\n            ctx.beginPath();\n            ctx.lineWidth = lineWidth;\n            ctx.moveTo(x1, y1);\n            if (side == 'left') {\n                ctx.lineTo(x1 - currentHeight, y1 - currentWidth);\n                ctx.stroke();\n                currentHeight += 1;\n                currentWidth += 1;\n                if (currentHeight < x2 && currentWidth < y2) {\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else if (side == 'right') {\n                ctx.lineTo(x1 + currentHeight, y1 - currentWidth);\n                ctx.stroke();\n                currentHeight += 1;\n                currentWidth += 1;\n                if (currentHeight > x2 && currentWidth < y2) {\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else if (side == 'leftLeg') {\n                ctx.lineTo(x1 - currentHeight, y1 + currentWidth);\n                ctx.stroke();\n                currentHeight += 1;\n                currentWidth += 1;\n                if (currentHeight < x2 && currentWidth > y2) {\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else {\n                ctx.lineTo(x1 + currentHeight, y1 + currentWidth);\n                ctx.stroke();\n                currentHeight += 1;\n                currentWidth += 1;\n                if (currentHeight > x2 && currentWidth > y2) {\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n\n        };\n\n        requestId = requestAnimationFrame(drawPart);\n    };\n\n    const drawBody = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * 0.5* headRadiusRatio;\n        drawBodyPart(ctx, canvas.width / 2.3, bodyYStart, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio, 80);\n    }\n\n    const drawLeftArm = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const armLength = canvas.height * 0.5;\n         drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * headRadiusRatio / 2, canvas.width / 2.3 - armLength,\n           canvas.height , 'left');\n    };\n\n    const drawRightArm = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const armLength = canvas.height * armLengthRatio;\n\n        drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * headRadiusRatio / 2, canvas.width / 2.3 + armLength,\n            bodyYStart - canvas.height * headRadiusRatio / 2, 'right');\n    };\n\n    const drawLeftLeg = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const legLength = canvas.height * legLengthRatio;\n\n\n        drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio / 2, canvas.width / 2.3 - legLength,\n            bodyYStart + canvas.height * torsoHeightRatio + legLength, 'leftLeg');\n    };\n\n    const drawRightLeg = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const radius = canvas.height / 8;\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const legLength = canvas.height * legLengthRatio;\n\n        drawLimbs(ctx, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio / 2, canvas.width / 2.3 + legLength, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'rightLeg');\n    };\n\n    const drawPole = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        const radius = canvas.height / 8;\n        const poleWidth = canvas.width * 3 * poleWidthRatio;\n        const poleHeight = canvas.height * poleHeightRatio;\n        const poleTopY = canvas.height * poleTopOffsetRatio;\n        ctx.lineWidth = 4;\n        ctx.strokeStyle = color;\n        // drawBodyPart(ctx, canvas.width / 2 - 3*radius, canvas.height / 4 - 3* radius, canvas.width / 2 - 3*radius, canvas.height / 2 + 3*radius, 100);\n        ctx.beginPath();\n        ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n        ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleHeight - poleTopY * 1.8);\n        ctx.lineTo(canvas.width / 8 + poleWidth / 2 , poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 8 + poleWidth / 2 , poleTopY * 0.8);\n        ctx.font = 'bold 62px Arial';\n        ctx.fillStyle = 'white';\n        ctx.fillText('O', canvas.width / 7 + poleWidth / 3, poleTopY * 1.15);\n        ctx.moveTo(canvas.width / 3 + poleWidth / 2 , poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n        ctx.stroke();\n    }\n\n    const renderAlphabets = (item, index) => <div key={index}\n        className=\"alphabet\" onClick={() => {\n            if (!selectedLetters.includes(item) && selectedLetters.length <= attempts) {\n                setSelectedLetters([...selectedLetters, item]);\n                if (!word.includes(item)) {\n                    const icattempts = inCorrectAttempts;\n                    setIncorrectAttempts(icattempts + 1);\n                    hangmanParts.find((part) => part.attempt === icattempts + 1).draw();\n                }\n            }\n\n        }}  >\n        <p style={{\n            color: selectedLetters.includes(item) ? word.includes(item) ? 'red' : 'grey' : 'black',\n            textDecoration: selectedLetters.includes(item) && !word.includes(item) ? 'line-through' : 'none',\n        }}> {item} </p>\n    </div>\n\n    const renderWord = (item, index) => <div key={index} className=\"letter-container\">\n        {/* <div className=\"letter\">\n            {selectedLetters.includes(item) ? item : ' '}\n        </div> */}\n        <div className=\"underline\"> {selectedLetters.includes(item) ? item : '  '}</div>\n    </div>\n\n    return (\n        <div className=\"viewContainer\">\n            <div className='headerContainer' >\n\n                <h2 className='header'>Hangman</h2>\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                <canvas ref={canvasRef} width={400} height={600} />;\n                <div>\n                    <div className=\"container\">\n                        <div className=\"alphabet-container\">\n                            {alphabets.map((item, index) => renderAlphabets(item, index))}\n                        </div>\n\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'row', padding: '50px' }}>\n                        {word.split('').map((item, index) => renderWord(item, index))}\n                    </div>\n                    <div>\n                        <p style={{ color: 'wheat', fontSize: '16px' }}> The hint is .........</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EAC3C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAMY,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACpJ,MAAMC,QAAQ,GAAG,CAAC;EAClB,MAAMC,YAAY,GAAG,CAAC;IAClB,SAAS,EAAE,CAAC;IACZ,MAAM,EAAEC,CAAA,KAAMC,UAAU,CAAC;EAC7B,CAAC,EAAE;IACC,SAAS,EAAE,CAAC;IACZ,MAAM,EAAED,CAAA,KAAME,QAAQ,CAAC;EAC3B,CAAC,EAAE;IACC,SAAS,EAAE,CAAC;IACZ,MAAM,EAAEF,CAAA,KAAMG,WAAW,CAAC;EAC9B,CAAC,EAAE;IACC,SAAS,EAAE,CAAC;IACZ,MAAM,EAAEH,CAAA,KAAMI,YAAY,CAAC;EAC/B,CAAC,EAAE;IACC,SAAS,EAAE,CAAC;IACZ,MAAM,EAAEJ,CAAA,KAAMK,WAAW,CAAC;EAC9B,CAAC,EAAE;IACC,SAAS,EAAE,CAAC;IACZ,MAAM,EAAEL,CAAA,KAAMM,YAAY,CAAC;EAC/B,CAAC,CAAC;EACF,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,KAAK,GAAG,OAAO;EACrB,MAAMC,eAAe,GAAG,IAAI;EAC5B,MAAMC,gBAAgB,GAAG,GAAG;EAC5B,MAAMC,cAAc,GAAG,GAAG;EAC1B,MAAMC,cAAc,GAAG,GAAG;EAC1B,MAAMC,cAAc,GAAG,GAAG;EAC1B,MAAMC,eAAe,GAAG,CAAC;EACzB,MAAMC,kBAAkB,GAAG,GAAG;EAC9BhC,SAAS,CAAC,MAAM;IACZiC,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMf,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMgB,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAM,GAAGb,eAAe;IAC9C,MAAMc,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGD,MAAM,GAAC,CAAC;IAC/C,IAAIG,YAAY,GAAG,CAAC;IACpB,IAAIC,eAAe,GAAG,IAAI;IAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAExBP,GAAG,CAACQ,SAAS,CAAC,CAAC;MACfR,GAAG,CAACS,GAAG,CAACX,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,GAAGF,MAAM,EAAEA,MAAM,EAAE,CAAC,EAAEG,YAAY,CAAC;MACzEL,GAAG,CAACZ,SAAS,GAAG,EAAE;MAClBY,GAAG,CAACW,WAAW,GAAGtB,KAAK;MACvBW,GAAG,CAACY,MAAM,CAAC,CAAC;MAEZP,YAAY,IAAI,GAAG;MAEnB,IAAIA,YAAY,GAAGQ,IAAI,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,EAAE;QAChCC,oBAAoB,CAACT,eAAe,CAAC;MACzC,CAAC,MAAM;QACHA,eAAe,GAAGU,qBAAqB,CAACT,aAAa,CAAC;MAC1D;IACJ,CAAC;IAEDD,eAAe,GAAGU,qBAAqB,CAACT,aAAa,CAAC;EAC1D,CAAC;EAED,MAAMU,YAAY,GAAGA,CAACjB,GAAG,EAAEkB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAElB,MAAM,KAAK;IAClD,IAAImB,aAAa,GAAG,CAAC;IACrB,IAAIC,SAAS,GAAG,IAAI;IAEpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACnBxB,GAAG,CAACQ,SAAS,CAAC,CAAC;MACfR,GAAG,CAACZ,SAAS,GAAGA,SAAS;MACzBY,GAAG,CAACyB,MAAM,CAACP,EAAE,EAAEC,EAAE,CAAC;MAClBnB,GAAG,CAAC0B,MAAM,CAACN,EAAE,EAAEC,EAAE,GAAGC,aAAa,CAAC;MAClCtB,GAAG,CAACY,MAAM,CAAC,CAAC;MACZU,aAAa,IAAI,CAAC;MAElB,IAAIA,aAAa,GAAGnB,MAAM,EAAE;QACxBY,oBAAoB,CAACQ,SAAS,CAAC;MACnC,CAAC,MAAM;QACHA,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;MAC/C;IACJ,CAAC;IAEDD,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;EAC/C,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAC3B,GAAG,EAAEkB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEO,IAAI,KAAK;IAC7C,IAAIN,aAAa,GAAG,CAAC;IACrB,IAAIO,YAAY,GAAG,CAAC;IACpB,IAAIN,SAAS,GAAG,IAAI;IACpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;MACnBxB,GAAG,CAACQ,SAAS,CAAC,CAAC;MACfR,GAAG,CAACZ,SAAS,GAAGA,SAAS;MACzBY,GAAG,CAACyB,MAAM,CAACP,EAAE,EAAEC,EAAE,CAAC;MAClB,IAAIS,IAAI,IAAI,MAAM,EAAE;QAChB5B,GAAG,CAAC0B,MAAM,CAACR,EAAE,GAAGI,aAAa,EAAEH,EAAE,GAAGU,YAAY,CAAC;QACjD7B,GAAG,CAACY,MAAM,CAAC,CAAC;QACZU,aAAa,IAAI,CAAC;QAClBO,YAAY,IAAI,CAAC;QACjB,IAAIP,aAAa,GAAGF,EAAE,IAAIS,YAAY,GAAGR,EAAE,EAAE;UACzCN,oBAAoB,CAACQ,SAAS,CAAC;QACnC,CAAC,MAAM;UACHA,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;QAC/C;MACJ,CAAC,MACI,IAAII,IAAI,IAAI,OAAO,EAAE;QACtB5B,GAAG,CAAC0B,MAAM,CAACR,EAAE,GAAGI,aAAa,EAAEH,EAAE,GAAGU,YAAY,CAAC;QACjD7B,GAAG,CAACY,MAAM,CAAC,CAAC;QACZU,aAAa,IAAI,CAAC;QAClBO,YAAY,IAAI,CAAC;QACjB,IAAIP,aAAa,GAAGF,EAAE,IAAIS,YAAY,GAAGR,EAAE,EAAE;UACzCN,oBAAoB,CAACQ,SAAS,CAAC;QACnC,CAAC,MAAM;UACHA,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;QAC/C;MACJ,CAAC,MACI,IAAII,IAAI,IAAI,SAAS,EAAE;QACxB5B,GAAG,CAAC0B,MAAM,CAACR,EAAE,GAAGI,aAAa,EAAEH,EAAE,GAAGU,YAAY,CAAC;QACjD7B,GAAG,CAACY,MAAM,CAAC,CAAC;QACZU,aAAa,IAAI,CAAC;QAClBO,YAAY,IAAI,CAAC;QACjB,IAAIP,aAAa,GAAGF,EAAE,IAAIS,YAAY,GAAGR,EAAE,EAAE;UACzCN,oBAAoB,CAACQ,SAAS,CAAC;QACnC,CAAC,MAAM;UACHA,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;QAC/C;MACJ,CAAC,MACI;QACDxB,GAAG,CAAC0B,MAAM,CAACR,EAAE,GAAGI,aAAa,EAAEH,EAAE,GAAGU,YAAY,CAAC;QACjD7B,GAAG,CAACY,MAAM,CAAC,CAAC;QACZU,aAAa,IAAI,CAAC;QAClBO,YAAY,IAAI,CAAC;QACjB,IAAIP,aAAa,GAAGF,EAAE,IAAIS,YAAY,GAAGR,EAAE,EAAE;UACzCN,oBAAoB,CAACQ,SAAS,CAAC;QACnC,CAAC,MAAM;UACHA,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;QAC/C;MACJ;IAEJ,CAAC;IAEDD,SAAS,GAAGP,qBAAqB,CAACQ,QAAQ,CAAC;EAC/C,CAAC;EAED,MAAMzC,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMe,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMG,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACK,MAAM,GAAG,GAAG,GAAEb,eAAe;IAC3E2B,YAAY,CAACjB,GAAG,EAAEF,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,EAAEN,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGZ,gBAAgB,EAAE,EAAE,CAAC;EAC5H,CAAC;EAED,MAAMP,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMc,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMG,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACK,MAAM,GAAGb,eAAe;IACtE,MAAMwC,SAAS,GAAGhC,MAAM,CAACK,MAAM,GAAG,GAAG;IACpCwB,SAAS,CAAC3B,GAAG,EAAEF,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGb,eAAe,GAAG,CAAC,EAAEQ,MAAM,CAACY,KAAK,GAAG,GAAG,GAAGoB,SAAS,EACjHhC,MAAM,CAACK,MAAM,EAAG,MAAM,CAAC;EAC9B,CAAC;EAED,MAAMlB,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMa,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMG,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACK,MAAM,GAAGb,eAAe;IACtE,MAAMwC,SAAS,GAAGhC,MAAM,CAACK,MAAM,GAAGX,cAAc;IAEhDmC,SAAS,CAAC3B,GAAG,EAAEF,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGb,eAAe,GAAG,CAAC,EAAEQ,MAAM,CAACY,KAAK,GAAG,GAAG,GAAGoB,SAAS,EAC/G1B,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGb,eAAe,GAAG,CAAC,EAAE,OAAO,CAAC;EAClE,CAAC;EAED,MAAMJ,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMY,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMG,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACK,MAAM,GAAGb,eAAe;IACtE,MAAMyC,SAAS,GAAGjC,MAAM,CAACK,MAAM,GAAGV,cAAc;IAGhDkC,SAAS,CAAC3B,GAAG,EAAEF,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGZ,gBAAgB,GAAG,CAAC,EAAEO,MAAM,CAACY,KAAK,GAAG,GAAG,GAAGqB,SAAS,EAChH3B,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGZ,gBAAgB,GAAGwC,SAAS,EAAE,SAAS,CAAC;EAC7E,CAAC;EAED,MAAM5C,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMW,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC;IAChC,MAAMC,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAG,CAAC,GAAGL,MAAM,CAACK,MAAM,GAAGb,eAAe;IACtE,MAAMyC,SAAS,GAAGjC,MAAM,CAACK,MAAM,GAAGV,cAAc;IAEhDkC,SAAS,CAAC3B,GAAG,EAAEF,MAAM,CAACY,KAAK,GAAG,GAAG,EAAEN,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGZ,gBAAgB,GAAG,CAAC,EAAEO,MAAM,CAACY,KAAK,GAAG,GAAG,GAAGqB,SAAS,EAAE3B,UAAU,GAAGN,MAAM,CAACK,MAAM,GAAGZ,gBAAgB,GAAGwC,SAAS,EAAE,UAAU,CAAC;EAChM,CAAC;EAED,MAAMlC,QAAQ,GAAGA,CAAA,KAAM;IACnB,MAAMC,MAAM,GAAG3B,SAAS,CAAC4B,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACgC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAElC,MAAM,CAACY,KAAK,EAAEZ,MAAM,CAACK,MAAM,CAAC;IAChD,MAAMD,MAAM,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC;IAChC,MAAM8B,SAAS,GAAGnC,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGhB,cAAc;IACnD,MAAMwC,UAAU,GAAGpC,MAAM,CAACK,MAAM,GAAGR,eAAe;IAClD,MAAMwC,QAAQ,GAAGrC,MAAM,CAACK,MAAM,GAAGP,kBAAkB;IACnDI,GAAG,CAACZ,SAAS,GAAG,CAAC;IACjBY,GAAG,CAACW,WAAW,GAAGtB,KAAK;IACvB;IACAW,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACyB,MAAM,CAAC3B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAEE,QAAQ,GAAG,GAAG,CAAC;IAC5DnC,GAAG,CAAC0B,MAAM,CAAC5B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAEE,QAAQ,GAAGD,UAAU,CAAC;IACnElC,GAAG,CAACyB,MAAM,CAAC3B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAEC,UAAU,GAAGC,QAAQ,GAAG,GAAG,CAAC;IACzEnC,GAAG,CAAC0B,MAAM,CAAC5B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAGE,QAAQ,GAAG,GAAG,CAAC;IAC7DnC,GAAG,CAAC0B,MAAM,CAAC5B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAGE,QAAQ,GAAG,GAAG,CAAC;IAC7DnC,GAAG,CAACoC,IAAI,GAAG,iBAAiB;IAC5BpC,GAAG,CAACqC,SAAS,GAAG,OAAO;IACvBrC,GAAG,CAACsC,QAAQ,CAAC,GAAG,EAAExC,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAEE,QAAQ,GAAG,IAAI,CAAC;IACpEnC,GAAG,CAACyB,MAAM,CAAC3B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAGE,QAAQ,GAAG,GAAG,CAAC;IAC7DnC,GAAG,CAAC0B,MAAM,CAAC5B,MAAM,CAACY,KAAK,GAAG,CAAC,GAAGuB,SAAS,GAAG,CAAC,EAAEE,QAAQ,GAAG,GAAG,CAAC;IAC5DnC,GAAG,CAACY,MAAM,CAAC,CAAC;EAChB,CAAC;EAED,MAAM2B,eAAe,GAAGA,CAACC,IAAI,EAAEC,KAAK,kBAAKzE,OAAA;IACrC0E,SAAS,EAAC,UAAU;IAACC,OAAO,EAAEA,CAAA,KAAM;MAChC,IAAI,CAACrE,eAAe,CAACsE,QAAQ,CAACJ,IAAI,CAAC,IAAIlE,eAAe,CAACuE,MAAM,IAAIlE,QAAQ,EAAE;QACvEJ,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEkE,IAAI,CAAC,CAAC;QAC9C,IAAI,CAACpE,IAAI,CAACwE,QAAQ,CAACJ,IAAI,CAAC,EAAE;UACtB,MAAMM,UAAU,GAAGtE,iBAAiB;UACpCC,oBAAoB,CAACqE,UAAU,GAAG,CAAC,CAAC;UACpClE,YAAY,CAACmE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,OAAO,KAAKH,UAAU,GAAG,CAAC,CAAC,CAACjE,IAAI,CAAC,CAAC;QACvE;MACJ;IAEJ,CAAE;IAAAqE,QAAA,eACFlF,OAAA;MAAGmF,KAAK,EAAE;QACN9D,KAAK,EAAEf,eAAe,CAACsE,QAAQ,CAACJ,IAAI,CAAC,GAAGpE,IAAI,CAACwE,QAAQ,CAACJ,IAAI,CAAC,GAAG,KAAK,GAAG,MAAM,GAAG,OAAO;QACtFY,cAAc,EAAE9E,eAAe,CAACsE,QAAQ,CAACJ,IAAI,CAAC,IAAI,CAACpE,IAAI,CAACwE,QAAQ,CAACJ,IAAI,CAAC,GAAG,cAAc,GAAG;MAC9F,CAAE;MAAAU,QAAA,GAAC,GAAC,EAACV,IAAI,EAAC,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC,GAfgCf,KAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgBnD,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAACjB,IAAI,EAAEC,KAAK,kBAAKzE,OAAA;IAAiB0E,SAAS,EAAC,kBAAkB;IAAAQ,QAAA,eAI7ElF,OAAA;MAAK0E,SAAS,EAAC,WAAW;MAAAQ,QAAA,GAAC,GAAC,EAAC5E,eAAe,CAACsE,QAAQ,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,IAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,GAJtCf,KAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAK9C,CAAC;EAEN,oBACIxF,OAAA;IAAK0E,SAAS,EAAC,eAAe;IAAAQ,QAAA,gBAC1BlF,OAAA;MAAK0E,SAAS,EAAC,iBAAiB;MAAAQ,QAAA,eAE5BlF,OAAA;QAAI0E,SAAS,EAAC,QAAQ;QAAAQ,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACNxF,OAAA;MAAKmF,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE;MAAM,CAAE;MAAAT,QAAA,gBAClDlF,OAAA;QAAQ4F,GAAG,EAAEzF,SAAU;QAACuC,KAAK,EAAE,GAAI;QAACP,MAAM,EAAE;MAAI;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KACnD,eAAAxF,OAAA;QAAAkF,QAAA,gBACIlF,OAAA;UAAK0E,SAAS,EAAC,WAAW;UAAAQ,QAAA,eACtBlF,OAAA;YAAK0E,SAAS,EAAC,oBAAoB;YAAAQ,QAAA,EAC9BxE,SAAS,CAACmF,GAAG,CAAC,CAACrB,IAAI,EAAEC,KAAK,KAAKF,eAAe,CAACC,IAAI,EAAEC,KAAK,CAAC;UAAC;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEL,CAAC,eACNxF,OAAA;UAAKmF,KAAK,EAAE;YAAEO,OAAO,EAAE,MAAM;YAAEC,aAAa,EAAE,KAAK;YAAEG,OAAO,EAAE;UAAO,CAAE;UAAAZ,QAAA,EAClE9E,IAAI,CAAC2F,KAAK,CAAC,EAAE,CAAC,CAACF,GAAG,CAAC,CAACrB,IAAI,EAAEC,KAAK,KAAKgB,UAAU,CAACjB,IAAI,EAAEC,KAAK,CAAC;QAAC;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACNxF,OAAA;UAAAkF,QAAA,eACIlF,OAAA;YAAGmF,KAAK,EAAE;cAAE9D,KAAK,EAAE,OAAO;cAAE2E,QAAQ,EAAE;YAAO,CAAE;YAAAd,QAAA,EAAC;UAAsB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACtF,EAAA,CA7QuBD,OAAO;AAAAgG,EAAA,GAAPhG,OAAO;AAAA,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}