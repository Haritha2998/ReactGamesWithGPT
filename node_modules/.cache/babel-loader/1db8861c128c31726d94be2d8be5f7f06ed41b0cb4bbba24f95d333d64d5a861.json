{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n  const [animationFrame, setAnimationFrame] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const radius = canvas.height / 8;\n    const lineWidth = 2;\n    const color = 'white';\n    const lineHeight = 100; // Adjusted to desired line length\n\n    let currentAngle = 0;\n    let currentHeight = 0;\n    let requestIdCircle = null;\n    let requestIdLine = null;\n    const drawCircle = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n      ctx.beginPath();\n      ctx.arc(canvas.width / 4, canvas.height / 4, radius, 0, currentAngle);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.stroke();\n      currentAngle += 0.1;\n      if (currentAngle > Math.PI * 2) {\n        cancelAnimationFrame(requestIdCircle);\n        requestIdCircle = null;\n        drawLine(); // Start drawing the line after circle animation\n      } else {\n        requestIdCircle = requestAnimationFrame(drawCircle);\n      }\n    };\n    const drawLine = () => {\n      ctx.beginPath();\n      ctx.moveTo(canvas.width / 4, canvas.height / 4 + radius); // Start at circle's bottom\n      ctx.lineTo(canvas.width / 4, canvas.height / 4 + radius + currentHeight);\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.stroke();\n      currentHeight += 1;\n      if (currentHeight > lineHeight) {\n        cancelAnimationFrame(requestIdLine);\n        requestIdLine = null;\n        ctx.beginPath();\n        ctx.moveTo(canvas.width / 4, canvas.height / 4 + 2 * radius);\n        ctx.lineTo(canvas.width / 4 - 2 * radius, canvas.width / 4 + radius);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(canvas.width / 4, canvas.height / 2 + 2 * radius);\n        ctx.lineTo(canvas.width / 2 + 2 * radius, canvas.width / 2 + radius);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(canvas.width / 2, canvas.height);\n        ctx.lineTo(canvas.width / 2 + 2 * radius, canvas.height + 2 * radius);\n        ctx.stroke();\n      } else {\n        requestIdLine = requestAnimationFrame(drawLine);\n      }\n    };\n    drawCircle(); // Start with the circle animation\n  }, []);\n\n  // useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const ctx = canvas.getContext('2d');\n\n  //     // Draw hangman here\n\n  //     const drawHangman = () => {\n  //       // Clear canvas\n  //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n  //       ctx.strokeStyle = 'white';\n  //       ctx.lineWidth = 2;\n  //       // Draw hangman parts\n  //       // You'll need to implement this part based on the game state\n\n  //       // Example: Draw the gallows\n  //       ctx.beginPath();\n  //       ctx.moveTo(50, 350);\n  //       ctx.lineTo(200, 350);\n  //       ctx.lineTo(200, 50);\n  //       ctx.lineTo(150, 50);\n  //       ctx.lineTo(150, 100);\n  //       ctx.stroke();\n\n  //       // Example: Draw the head\n  //       ctx.beginPath();\n  //       ctx.arc(150, 125, 25, 0, Math.PI * 2);\n  //       ctx.stroke();\n\n  //       // Example: Draw the body\n  //       ctx.beginPath();\n  //       ctx.moveTo(150, 150);\n  //       ctx.lineTo(150, 250);\n  //       ctx.stroke();\n\n  //       // Example: Draw the arms\n  //       ctx.beginPath();\n  //       ctx.moveTo(150, 175);\n  //       ctx.lineTo(100, 200);\n  //       ctx.moveTo(150, 175);\n  //       ctx.lineTo(200, 200);\n  //       ctx.stroke();\n\n  //       // Example: Draw the legs\n  //       ctx.beginPath();\n  //       ctx.moveTo(150, 250);\n  //       ctx.lineTo(125, 300);\n  //       ctx.moveTo(150, 250);\n  //       ctx.lineTo(175, 300);\n  //       ctx.stroke();\n  //     };\n\n  //     // Start animation loop\n  //     const animate = () => {\n  //       drawHangman();\n  //       setAnimationFrame(requestAnimationFrame(animate));\n  //     };\n\n  //     animate();\n\n  //     return () => {\n  //       cancelAnimationFrame(animationFrame);\n  //     };\n  //   }, [animationFrame]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 200,\n        height: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"JCjeffYr247CM9PIYRFmQ2z5d00=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","animationFrame","setAnimationFrame","canvas","current","ctx","getContext","radius","height","lineWidth","color","lineHeight","currentAngle","currentHeight","requestIdCircle","requestIdLine","drawCircle","clearRect","width","beginPath","arc","strokeStyle","stroke","Math","PI","cancelAnimationFrame","drawLine","requestAnimationFrame","moveTo","lineTo","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n    const [animationFrame, setAnimationFrame] = useState(null);\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const radius = canvas.height / 8;\n        const lineWidth = 2;\n        const color = 'white';\n        const lineHeight = 100; // Adjusted to desired line length\n\n        let currentAngle = 0;\n        let currentHeight = 0;\n        let requestIdCircle = null;\n        let requestIdLine = null;\n\n        const drawCircle = () => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n            ctx.beginPath();\n            ctx.arc(canvas.width / 4, canvas.height / 4, radius, 0, currentAngle);\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n            currentAngle += 0.1;\n            if (currentAngle > Math.PI * 2) {\n                cancelAnimationFrame(requestIdCircle);\n                requestIdCircle = null;\n                drawLine(); // Start drawing the line after circle animation\n            } else {\n                requestIdCircle = requestAnimationFrame(drawCircle);\n            }\n        };\n\n        const drawLine = () => {\n            ctx.beginPath();\n            ctx.moveTo(canvas.width / 4, canvas.height/4 + radius); // Start at circle's bottom\n            ctx.lineTo(canvas.width / 4, canvas.height/4 + radius + currentHeight);\n\n\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = color;\n            ctx.stroke();\n\n            currentHeight += 1;\n            if (currentHeight > lineHeight) {\n                cancelAnimationFrame(requestIdLine);\n                requestIdLine = null;\n                ctx.beginPath();\n                ctx.moveTo(canvas.width / 4, canvas.height/4 + 2*radius);\n                ctx.lineTo(canvas.width / 4 - 2*radius, canvas.width / 4 + radius);\n                ctx.stroke();\n                ctx.beginPath();\n                ctx.moveTo(canvas.width / 4, canvas.height/2 + 2*radius);\n                ctx.lineTo(canvas.width / 2 + 2*radius, canvas.width / 2 + radius);\n                ctx.stroke();\n                ctx.beginPath();\n                ctx.moveTo(canvas.width / 2, canvas.height);\n                ctx.lineTo(canvas.width / 2 + 2*radius, canvas.height + 2*radius);\n                ctx.stroke();\n            } else {\n                requestIdLine = requestAnimationFrame(drawLine);\n            }\n        };\n\n        drawCircle(); // Start with the circle animation\n    }, []);\n\n    // useEffect(() => {\n    //     const canvas = canvasRef.current;\n    //     const ctx = canvas.getContext('2d');\n      \n    //     // Draw hangman here\n      \n    //     const drawHangman = () => {\n    //       // Clear canvas\n    //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n    //       ctx.strokeStyle = 'white';\n    //       ctx.lineWidth = 2;\n    //       // Draw hangman parts\n    //       // You'll need to implement this part based on the game state\n      \n    //       // Example: Draw the gallows\n    //       ctx.beginPath();\n    //       ctx.moveTo(50, 350);\n    //       ctx.lineTo(200, 350);\n    //       ctx.lineTo(200, 50);\n    //       ctx.lineTo(150, 50);\n    //       ctx.lineTo(150, 100);\n    //       ctx.stroke();\n      \n    //       // Example: Draw the head\n    //       ctx.beginPath();\n    //       ctx.arc(150, 125, 25, 0, Math.PI * 2);\n    //       ctx.stroke();\n      \n    //       // Example: Draw the body\n    //       ctx.beginPath();\n    //       ctx.moveTo(150, 150);\n    //       ctx.lineTo(150, 250);\n    //       ctx.stroke();\n      \n    //       // Example: Draw the arms\n    //       ctx.beginPath();\n    //       ctx.moveTo(150, 175);\n    //       ctx.lineTo(100, 200);\n    //       ctx.moveTo(150, 175);\n    //       ctx.lineTo(200, 200);\n    //       ctx.stroke();\n      \n    //       // Example: Draw the legs\n    //       ctx.beginPath();\n    //       ctx.moveTo(150, 250);\n    //       ctx.lineTo(125, 300);\n    //       ctx.moveTo(150, 250);\n    //       ctx.lineTo(175, 300);\n    //       ctx.stroke();\n    //     };\n      \n    //     // Start animation loop\n    //     const animate = () => {\n    //       drawHangman();\n    //       setAnimationFrame(requestAnimationFrame(animate));\n    //     };\n      \n    //     animate();\n      \n    //     return () => {\n    //       cancelAnimationFrame(animationFrame);\n    //     };\n    //   }, [animationFrame]);\n\n    return (\n        <div className='viewContainer'>\n            <div className='headerContainer' >\n                <canvas ref={canvasRef} width={200} height={200}/>;\n                <h2 className='header'>Hangman game</h2>\n\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}