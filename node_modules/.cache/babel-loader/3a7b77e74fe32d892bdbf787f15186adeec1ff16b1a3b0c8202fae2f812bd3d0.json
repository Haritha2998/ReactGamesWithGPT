{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n\n  // useEffect(() => {\n  //     const canvas = canvasRef.current;\n  //     const ctx = canvas.getContext('2d');\n  //     const radius = canvas.height / 4;\n  //     const lineWidth = 2;\n  //     const color = 'white';\n  //     const lineHeight = 25; // Adjusted to desired line length\n\n  //     let currentAngle = 0;\n  //     let currentHeight = 0;\n  //     let requestIdCircle = null;\n  //     let requestIdLine = null;\n\n  //     const drawCircle = () => {\n  //         ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n  //         ctx.beginPath();\n  //         ctx.arc(canvas.width / 2, canvas.height / 2, radius, 0, currentAngle);\n  //         ctx.lineWidth = lineWidth;\n  //         ctx.strokeStyle = color;\n  //         ctx.stroke();\n\n  //         currentAngle += 0.1;\n  //         if (currentAngle > Math.PI * 2) {\n  //             cancelAnimationFrame(requestIdCircle);\n  //             requestIdCircle = null;\n  //             drawLine(); // Start drawing the line after circle animation\n  //         } else {\n  //             requestIdCircle = requestAnimationFrame(drawCircle);\n  //         }\n  //     };\n\n  //     const drawLine = () => {\n  //         ctx.beginPath();\n  //         ctx.moveTo(canvas.width / 2, canvas.height); // Start at circle's bottom\n  //         ctx.lineTo(canvas.width / 2, canvas.height - currentHeight); // Adjust for radius\n  //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight - radius / 2); // Start at waist\n  //         ctx.lineTo(canvas.width / 2 - radius - 100, canvas.height - currentHeight - radius * 2); // Left hand\n  //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight - radius / 2); // Start at waist again\n  //         ctx.lineTo(canvas.width / 2 + radius + 100, canvas.height - currentHeight - radius * 2); // Right hand\n\n  //         // Legs\n  //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight); // Start at feet\n  //         ctx.lineTo(canvas.width / 2 - radius / 2, canvas.height - currentHeight - radius); // Left leg\n  //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight); // Start at feet again\n  //         ctx.lineTo(canvas.width / 2 + radius / 2, canvas.height - currentHeight - radius);\n\n  //         ctx.lineWidth = 1;\n  //         ctx.strokeStyle = color;\n  //         ctx.stroke();\n\n  //         currentHeight += 2;\n  //         if (currentHeight > lineHeight) {\n  //             cancelAnimationFrame(requestIdLine);\n  //             requestIdLine = null;\n  //         } else {\n  //             requestIdLine = requestAnimationFrame(drawLine);\n  //         }\n  //     };\n\n  //     drawCircle(); // Start with the circle animation\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 100,\n        height: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"header\",\n      children: \"Hangman\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","className","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/my_portfolio/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n\n    // useEffect(() => {\n    //     const canvas = canvasRef.current;\n    //     const ctx = canvas.getContext('2d');\n    //     const radius = canvas.height / 4;\n    //     const lineWidth = 2;\n    //     const color = 'white';\n    //     const lineHeight = 25; // Adjusted to desired line length\n\n    //     let currentAngle = 0;\n    //     let currentHeight = 0;\n    //     let requestIdCircle = null;\n    //     let requestIdLine = null;\n\n    //     const drawCircle = () => {\n    //         ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear canvas for each frame\n    //         ctx.beginPath();\n    //         ctx.arc(canvas.width / 2, canvas.height / 2, radius, 0, currentAngle);\n    //         ctx.lineWidth = lineWidth;\n    //         ctx.strokeStyle = color;\n    //         ctx.stroke();\n\n    //         currentAngle += 0.1;\n    //         if (currentAngle > Math.PI * 2) {\n    //             cancelAnimationFrame(requestIdCircle);\n    //             requestIdCircle = null;\n    //             drawLine(); // Start drawing the line after circle animation\n    //         } else {\n    //             requestIdCircle = requestAnimationFrame(drawCircle);\n    //         }\n    //     };\n\n    //     const drawLine = () => {\n    //         ctx.beginPath();\n    //         ctx.moveTo(canvas.width / 2, canvas.height); // Start at circle's bottom\n    //         ctx.lineTo(canvas.width / 2, canvas.height - currentHeight); // Adjust for radius\n    //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight - radius / 2); // Start at waist\n    //         ctx.lineTo(canvas.width / 2 - radius - 100, canvas.height - currentHeight - radius * 2); // Left hand\n    //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight - radius / 2); // Start at waist again\n    //         ctx.lineTo(canvas.width / 2 + radius + 100, canvas.height - currentHeight - radius * 2); // Right hand\n\n    //         // Legs\n    //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight); // Start at feet\n    //         ctx.lineTo(canvas.width / 2 - radius / 2, canvas.height - currentHeight - radius); // Left leg\n    //         ctx.moveTo(canvas.width / 2, canvas.height - currentHeight); // Start at feet again\n    //         ctx.lineTo(canvas.width / 2 + radius / 2, canvas.height - currentHeight - radius);\n\n\n    //         ctx.lineWidth = 1;\n    //         ctx.strokeStyle = color;\n    //         ctx.stroke();\n\n    //         currentHeight += 2;\n    //         if (currentHeight > lineHeight) {\n    //             cancelAnimationFrame(requestIdLine);\n    //             requestIdLine = null;\n    //         } else {\n    //             requestIdLine = requestAnimationFrame(drawLine);\n    //         }\n    //     };\n\n    //     drawCircle(); // Start with the circle animation\n    // }, []);\n\n    \n    return (\n        <div className='viewContainer'>\n            <div className='headerContainer' >\n                <canvas ref={canvasRef} width={100} height={100} />;\n                <h2 className='header'>Hangman</h2>\n\n            </div>\n            <h2 className='header'>Hangman</h2>\n            <h2 className='header'>Hangman</h2>\n            <h2 className='header'>Hangman</h2>\n            <h2 className='header'>Hangman</h2>\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,SAAS,GAAGL,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAGA,oBACIE,OAAA;IAAKI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BL,OAAA;MAAKI,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BL,OAAA;QAAQM,GAAG,EAAEH,SAAU;QAACI,KAAK,EAAE,GAAI;QAACC,MAAM,EAAE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KACnD,eAAAZ,OAAA;QAAII,SAAS,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElC,CAAC,eACNZ,OAAA;MAAII,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCZ,OAAA;MAAII,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCZ,OAAA;MAAII,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCZ,OAAA;MAAII,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEd;AAACV,EAAA,CAhFuBD,OAAO;AAAAY,EAAA,GAAPZ,OAAO;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}