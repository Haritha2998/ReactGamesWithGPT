{"ast":null,"code":"var _jsxFileName = \"/Users/haritha/Desktop/Job/Portfolio/WebGames/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport './Hangman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Hangman() {\n  _s();\n  const canvasRef = useRef(null);\n  const [word, setWord] = useState(\"\");\n  const [selectedLetters, setSelectedLetters] = useState([]);\n  const [inCorrectAttempts, setIncorrectAttempts] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  const attempts = 6;\n  const hangmanParts = [{\n    'attempt': 1,\n    'draw': () => drawCircle()\n  }, {\n    'attempt': 2,\n    'draw': () => drawBody()\n  }, {\n    'attempt': 3,\n    'draw': () => drawLeftArm()\n  }, {\n    'attempt': 4,\n    'draw': () => drawRightArm()\n  }, {\n    'attempt': 5,\n    'draw': () => drawLeftLeg()\n  }, {\n    'attempt': 6,\n    'draw': () => drawRightLeg()\n  }];\n  const lineWidth = 4;\n  const color = 'white';\n  const headRadiusRatio = 0.12;\n  const torsoHeightRatio = 0.15;\n  const armLengthRatio = 0.5;\n  const legLengthRatio = 0.6;\n  const poleWidthRatio = 0.2;\n  const poleHeightRatio = 1;\n  const poleTopOffsetRatio = 0.4;\n  useEffect(() => {\n    getWord();\n    drawPole();\n  }, []);\n  const getWord = () => {\n    fetch(\"https://www.wordgamedb.com/api/v1/words/random\").then(response => {\n      setWord(response);\n    });\n  };\n  const drawCircle = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const radius = canvas.height * headRadiusRatio;\n    const bodyYStart = canvas.height / 2 + radius / 2;\n    let currentAngle = 0;\n    let requestIdCircle = null;\n    const animateCircle = () => {\n      ctx.beginPath();\n      ctx.arc(canvas.width / 2.3, bodyYStart - radius, radius, 0, currentAngle);\n      ctx.lineWidth = 10;\n      ctx.strokeStyle = 'wheat';\n      ctx.stroke();\n      ctx.fillStyle = 'wheat';\n      ctx.fill();\n      ctx.font = 'bold 14px Arial';\n      ctx.fillStyle = 'black';\n      ctx.fillText('O', canvas.width / 2.3 - radius * 0.3, bodyYStart - radius * 1.2);\n      ctx.fillText('O', canvas.width / 2.3, bodyYStart - radius * 1.2);\n      currentAngle += 0.1;\n      if (currentAngle > Math.PI * 2 + 2) {\n        cancelAnimationFrame(requestIdCircle);\n      } else {\n        requestIdCircle = requestAnimationFrame(animateCircle);\n      }\n    };\n    requestIdCircle = requestAnimationFrame(animateCircle);\n  };\n  const drawBodyPart = (ctx, x1, y1, x2, y2, height) => {\n    let currentHeight = 0;\n    let requestId = null;\n    const drawPart = () => {\n      ctx.beginPath();\n      ctx.lineWidth = 60;\n      ctx.strokeStyle = 'aqua';\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2 + currentHeight);\n      ctx.stroke();\n      currentHeight += 1;\n      if (currentHeight > height) {\n        cancelAnimationFrame(requestId);\n      } else {\n        requestId = requestAnimationFrame(drawPart);\n      }\n    };\n    requestId = requestAnimationFrame(drawPart);\n  };\n  const drawLimbs = (ctx, x1, y1, x2, y2, side) => {\n    let currentHeight = 0;\n    let currentWidth = 0;\n    let requestId = null;\n    const drawPart = () => {\n      ctx.beginPath();\n      ctx.lineWidth = 20;\n      ctx.strokeStyle = 'wheat';\n      ctx.moveTo(x1, y1);\n      if (side == 'left') {\n        ctx.lineTo(x1 - currentHeight, y1);\n        ctx.stroke();\n        currentHeight += 1;\n        if (x1 - currentHeight < x2) {\n          ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else if (side == 'right') {\n        ctx.lineTo(x1 + currentHeight, y1);\n        ctx.stroke();\n        currentHeight += 1;\n        if (x1 + currentHeight > x2) {\n          ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else if (side == 'leftLeg') {\n        ctx.strokeStyle = 'yellow';\n        ctx.lineTo(x1, y1 + currentHeight);\n        ctx.stroke();\n        currentHeight += 1;\n        if (y1 + currentHeight > y2) {\n          console.log(\"Left leg\", x2, y2);\n          ctx.arc(x2 - 30, y2 + 24, 12, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      } else {\n        ctx.strokeStyle = 'yellow';\n        ctx.lineTo(x1, y1 + currentHeight);\n        ctx.stroke();\n        currentHeight += 1;\n        if (y1 + currentHeight > y2 + 10) {\n          console.log(\"Right leg\", x2, y2);\n          ctx.arc(x2 + 9, y2 + 20, 12, 0, Math.PI * 2);\n          ctx.stroke();\n          cancelAnimationFrame(requestId);\n        } else {\n          requestId = requestAnimationFrame(drawPart);\n        }\n      }\n    };\n    requestId = requestAnimationFrame(drawPart);\n  };\n  const drawBody = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * 0.5 * headRadiusRatio;\n    drawBodyPart(ctx, canvas.width / 2.3, bodyYStart, canvas.width / 2.3, bodyYStart + canvas.height / 2 * torsoHeightRatio, 80);\n  };\n  const drawLeftArm = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n    drawLimbs(ctx, canvas.width / 2.8, armY, canvas.height / 3 - canvas.width / 3, armY, 'left');\n  };\n  const drawRightArm = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n    drawLimbs(ctx, canvas.width / 1.97, armY, canvas.height / 4 + canvas.width / 3, armY, 'right');\n  };\n  const drawLeftLeg = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const legLength = canvas.height / 8 * legLengthRatio;\n    drawLimbs(ctx, canvas.width / 2.6, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.3, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'leftLeg');\n  };\n  const drawRightLeg = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n    const legLength = canvas.height / 7.8 * legLengthRatio;\n    console.log(\"Leg\", canvas.width / 2.6, bodyYStart + canvas.height / 2 * torsoHeightRatio, legLength);\n    drawLimbs(ctx, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'rightLeg');\n  };\n  const drawPole = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    const radius = canvas.height / 8;\n    const poleWidth = canvas.width * 3 * poleWidthRatio;\n    const poleHeight = canvas.height * poleHeightRatio;\n    const poleTopY = canvas.height * poleTopOffsetRatio;\n    ctx.lineWidth = 10;\n    ctx.strokeStyle = \"Sienna\";\n    // drawBodyPart(ctx, canvas.width / 2 - 3*radius, canvas.height / 4 - 3* radius, canvas.width / 2 - 3*radius, canvas.height / 2 + 3*radius, 100);\n    ctx.beginPath();\n    console.log(\"pole\", canvas.width / 3 - poleWidth / 2, poleTopY * 0.3, canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n    ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n    ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleHeight - poleTopY * 1.8);\n    ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.7);\n    ctx.font = 'bold 100px Arial';\n    ctx.fillStyle = 'Chocolate';\n    ctx.fillText('O', canvas.width / 6 + poleWidth / 3.7, poleTopY * 0.99);\n    ctx.moveTo(canvas.width / 3 + poleWidth / 2, poleTopY * 0.3);\n    ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n    ctx.stroke();\n  };\n  const renderAlphabets = (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alphabet\",\n    onClick: () => {\n      if (!selectedLetters.includes(item) && inCorrectAttempts < attempts) {\n        setSelectedLetters([...selectedLetters, item]);\n        if (!word.includes(item)) {\n          const icattempts = inCorrectAttempts + 1;\n          setIncorrectAttempts(icattempts);\n          hangmanParts.find(part => part.attempt === icattempts).draw();\n          if (icattempts == attempts) {\n            console.log(\"Game over\");\n          }\n        }\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: selectedLetters.includes(item) ? word.includes(item) ? 'red' : 'grey' : 'black',\n        textDecoration: selectedLetters.includes(item) && !word.includes(item) ? 'line-through' : 'none'\n      },\n      children: [\" \", item, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 46\n  }, this);\n  const renderWord = (item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"letter-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"underline\",\n      children: [\" \", selectedLetters.includes(item) ? item : '  ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 41\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"viewContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headerContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"header\",\n        children: \"Hangman\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 400,\n        height: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), \";\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alphabet-container\",\n            children: alphabets.map((item, index) => renderAlphabets(item, index))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'row',\n            padding: '50px'\n          },\n          children: word.split('').map((item, index) => renderWord(item, index))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'wheat',\n              fontSize: '16px'\n            },\n            children: \"HINT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"iFKuWHLAlWSoG0vspcM5M9hZLI8=\");\n_c = Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Hangman","_s","canvasRef","word","setWord","selectedLetters","setSelectedLetters","inCorrectAttempts","setIncorrectAttempts","loading","setLoading","alphabets","attempts","hangmanParts","draw","drawCircle","drawBody","drawLeftArm","drawRightArm","drawLeftLeg","drawRightLeg","lineWidth","color","headRadiusRatio","torsoHeightRatio","armLengthRatio","legLengthRatio","poleWidthRatio","poleHeightRatio","poleTopOffsetRatio","getWord","drawPole","fetch","then","response","canvas","current","ctx","getContext","radius","height","bodyYStart","currentAngle","requestIdCircle","animateCircle","beginPath","arc","width","strokeStyle","stroke","fillStyle","fill","font","fillText","Math","PI","cancelAnimationFrame","requestAnimationFrame","drawBodyPart","x1","y1","x2","y2","currentHeight","requestId","drawPart","moveTo","lineTo","drawLimbs","side","currentWidth","console","log","armY","legLength","clearRect","poleWidth","poleHeight","poleTopY","renderAlphabets","item","index","className","onClick","includes","icattempts","find","part","attempt","children","style","textDecoration","fileName","_jsxFileName","lineNumber","columnNumber","renderWord","display","flexDirection","ref","map","padding","split","fontSize","_c","$RefreshReg$"],"sources":["/Users/haritha/Desktop/Job/Portfolio/WebGames/src/Hangman.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport './Hangman.css';\nexport default function Hangman() {\n    const canvasRef = useRef(null);\n    const [word, setWord] = useState(\"\");\n    const [selectedLetters, setSelectedLetters] = useState([]);\n    const [inCorrectAttempts, setIncorrectAttempts] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const alphabets = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n    const attempts = 6;\n    const hangmanParts = [{\n        'attempt': 1,\n        'draw': () => drawCircle(),\n    }, {\n        'attempt': 2,\n        'draw': () => drawBody(),\n    }, {\n        'attempt': 3,\n        'draw': () => drawLeftArm()\n    }, {\n        'attempt': 4,\n        'draw': () => drawRightArm()\n    }, {\n        'attempt': 5,\n        'draw': () => drawLeftLeg()\n    }, {\n        'attempt': 6,\n        'draw': () => drawRightLeg()\n    }]\n    const lineWidth = 4;\n    const color = 'white';\n    const headRadiusRatio = 0.12;\n    const torsoHeightRatio = 0.15;\n    const armLengthRatio = 0.5;\n    const legLengthRatio = 0.6;\n    const poleWidthRatio = 0.2;\n    const poleHeightRatio = 1;\n    const poleTopOffsetRatio = 0.4;\n    useEffect(() => {\n        getWord();\n        drawPole();\n    }, [])\n\n    const getWord = () => {\n        fetch(\"https://www.wordgamedb.com/api/v1/words/random\")\n        .then(response => {\n            setWord(response)\n        })\n    }\n\n    const drawCircle = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const radius = canvas.height * headRadiusRatio;\n        const bodyYStart = canvas.height / 2 + radius / 2;\n        let currentAngle = 0;\n        let requestIdCircle = null;\n\n        const animateCircle = () => {\n\n            ctx.beginPath();\n            ctx.arc(canvas.width / 2.3, bodyYStart - radius, radius, 0, currentAngle);\n            ctx.lineWidth = 10;\n            ctx.strokeStyle = 'wheat';\n            ctx.stroke();\n            ctx.fillStyle = 'wheat'\n            ctx.fill();\n            ctx.font = 'bold 14px Arial';\n            ctx.fillStyle = 'black';\n            ctx.fillText('O', canvas.width / 2.3 - radius * 0.3, bodyYStart - radius * 1.2);\n            ctx.fillText('O', canvas.width / 2.3, bodyYStart - radius * 1.2);\n            currentAngle += 0.1;\n\n            if (currentAngle > Math.PI * 2 + 2) {\n                cancelAnimationFrame(requestIdCircle);\n            } else {\n                requestIdCircle = requestAnimationFrame(animateCircle);\n            }\n        };\n\n        requestIdCircle = requestAnimationFrame(animateCircle);\n    };\n\n    const drawBodyPart = (ctx, x1, y1, x2, y2, height) => {\n        let currentHeight = 0;\n        let requestId = null;\n\n        const drawPart = () => {\n            ctx.beginPath();\n            ctx.lineWidth = 60;\n            ctx.strokeStyle = 'aqua'\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2 + currentHeight);\n            ctx.stroke();\n            currentHeight += 1;\n\n            if (currentHeight > height) {\n                cancelAnimationFrame(requestId);\n            } else {\n                requestId = requestAnimationFrame(drawPart);\n            }\n        };\n\n        requestId = requestAnimationFrame(drawPart);\n    };\n\n    const drawLimbs = (ctx, x1, y1, x2, y2, side) => {\n        let currentHeight = 0;\n        let currentWidth = 0;\n        let requestId = null;\n        const drawPart = () => {\n            ctx.beginPath();\n            ctx.lineWidth = 20;\n            ctx.strokeStyle = 'wheat';\n            ctx.moveTo(x1, y1);\n            if (side == 'left') {\n                ctx.lineTo(x1 - currentHeight, y1);\n                ctx.stroke();\n                currentHeight += 1;\n                if (x1 - currentHeight < x2) {\n                    ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else if (side == 'right') {\n                ctx.lineTo(x1 + currentHeight, y1);\n                ctx.stroke();\n                currentHeight += 1;\n                if (x1 + currentHeight > x2) {\n                    ctx.arc(x2, y2, 10, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else if (side == 'leftLeg') {\n                ctx.strokeStyle = 'yellow';\n\n                ctx.lineTo(x1, y1 + currentHeight);\n                ctx.stroke();\n                currentHeight += 1;\n                if (y1 + currentHeight > y2) {\n                    console.log(\"Left leg\", x2, y2)\n                    ctx.arc(x2 - 30, y2 + 24, 12, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n            else {\n                ctx.strokeStyle = 'yellow';\n\n                ctx.lineTo(x1, y1 + currentHeight);\n                ctx.stroke();\n                currentHeight += 1;\n                if (y1 + currentHeight > y2 + 10) {\n                    console.log(\"Right leg\", x2, y2)\n                    ctx.arc(x2 + 9, y2 + 20, 12, 0, Math.PI * 2);\n                    ctx.stroke();\n                    cancelAnimationFrame(requestId);\n                } else {\n                    requestId = requestAnimationFrame(drawPart);\n                }\n            }\n\n        };\n\n        requestId = requestAnimationFrame(drawPart);\n    };\n\n    const drawBody = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * 0.5 * headRadiusRatio;\n        drawBodyPart(ctx, canvas.width / 2.3, bodyYStart, canvas.width / 2.3, bodyYStart + canvas.height / 2 * torsoHeightRatio, 80);\n    }\n\n    const drawLeftArm = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n\n        drawLimbs(ctx, canvas.width / 2.8, armY, canvas.height / 3 - canvas.width / 3,\n            armY, 'left');\n    };\n\n    const drawRightArm = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const armY = bodyYStart + canvas.height * torsoHeightRatio / 4;\n        drawLimbs(ctx, canvas.width / 1.97, armY, canvas.height / 4 + canvas.width / 3,\n            armY, 'right');\n    };\n\n    const drawLeftLeg = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const legLength = canvas.height / 8 * legLengthRatio;\n        drawLimbs(ctx, canvas.width / 2.6, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.3,\n            bodyYStart + canvas.height * torsoHeightRatio + legLength, 'leftLeg');\n    };\n\n    const drawRightLeg = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const bodyYStart = canvas.height / 2 + canvas.height * headRadiusRatio;\n        const legLength = canvas.height / 7.8 * legLengthRatio;\n        console.log(\"Leg\", canvas.width / 2.6, bodyYStart + canvas.height / 2 * torsoHeightRatio, legLength)\n\n        drawLimbs(ctx, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio, canvas.width / 2.1, bodyYStart + canvas.height * torsoHeightRatio + legLength, 'rightLeg');\n    };\n\n    const drawPole = () => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        const radius = canvas.height / 8;\n        const poleWidth = canvas.width * 3 * poleWidthRatio;\n        const poleHeight = canvas.height * poleHeightRatio;\n        const poleTopY = canvas.height * poleTopOffsetRatio;\n        ctx.lineWidth = 10;\n        ctx.strokeStyle = \"Sienna\";\n        // drawBodyPart(ctx, canvas.width / 2 - 3*radius, canvas.height / 4 - 3* radius, canvas.width / 2 - 3*radius, canvas.height / 2 + 3*radius, 100);\n        ctx.beginPath();\n        console.log(\"pole\", canvas.width / 3 - poleWidth / 2, poleTopY * 0.3, canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight)\n        ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY + poleHeight);\n        ctx.moveTo(canvas.width / 3 - poleWidth / 2, poleHeight - poleTopY * 1.8);\n        ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 8 + poleWidth / 2, poleTopY * 0.7);\n        ctx.font = 'bold 100px Arial';\n        ctx.fillStyle = 'Chocolate';\n        ctx.fillText('O', canvas.width / 6 + poleWidth / 3.7, poleTopY * 0.99);\n        ctx.moveTo(canvas.width / 3 + poleWidth / 2, poleTopY * 0.3);\n        ctx.lineTo(canvas.width / 3 - poleWidth / 2, poleTopY * 0.3);\n        ctx.stroke();\n    }\n\n    const renderAlphabets = (item, index) => <div key={index}\n        className=\"alphabet\" onClick={() => {\n            if (!selectedLetters.includes(item) && inCorrectAttempts < attempts) {\n                setSelectedLetters([...selectedLetters, item]);\n                if (!word.includes(item)) {\n                    const icattempts = inCorrectAttempts+1;\n                    setIncorrectAttempts(icattempts );\n                    hangmanParts.find((part) => part.attempt === icattempts ).draw();\n                    if (icattempts == attempts) {\n                        console.log(\"Game over\");\n                    }\n\n                }\n            }\n\n        }}  >\n        <p style={{\n            color: selectedLetters.includes(item) ? word.includes(item) ? 'red' : 'grey' : 'black',\n            textDecoration: selectedLetters.includes(item) && !word.includes(item) ? 'line-through' : 'none',\n        }}> {item} </p>\n    </div>\n\n    const renderWord = (item, index) => <div key={index} className=\"letter-container\">\n        {/* <div className=\"letter\">\n            {selectedLetters.includes(item) ? item : ' '}\n        </div> */}\n        <div className=\"underline\"> {selectedLetters.includes(item) ? item : '  '}</div>\n    </div>\n\n    return (\n        <div className=\"viewContainer\">\n            <div className='headerContainer' >\n\n                <h2 className='header'>Hangman</h2>\n            </div>\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n                <canvas ref={canvasRef} width={400} height={600} />;\n                <div>\n                    <div className=\"container\">\n                        <div className=\"alphabet-container\">\n                            {alphabets.map((item, index) => renderAlphabets(item, index))}\n                        </div>\n\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'row', padding: '50px' }}>\n                        {word.split('').map((item, index) => renderWord(item, index))}\n                    </div>\n                    <div>\n                        <p style={{ color: 'wheat', fontSize: '16px' }}>HINT</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}